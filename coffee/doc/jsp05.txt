# jsp05

Servlet(서블릿)
==> 이제까지 작성했던 JSP파일은 
	자바로 변환되어서 실행되어진다.
	==> 
		클라이언트에게 제공할 응답 문서를 작성하고 응답해주는 기능을 가지고 있는
		클래스를 서블릿 클래스라고 이야기 한다.
		쉽게 말하자면
			이처럼 JSP문서가 변환된 class를 우리는 서블릿 클래스라고 한다.
		
		따라서 우리가 서블릿 클래스를 직접 작성할 수 있다면 
		서버 입장에서는 JSP를 서블릿 클래스로 변환하는 작업을 줄일 수 있다.
		그러면 처리속도가 조금더 빨라질 수 있다.
		
	참고 ]
		Dynamic Web 페이지를 만드는 기술의 변천사
		
			Model 1
				==> jsp 문서를 만들어서 처리하는 기술
				
			Model 2
				==> MVC 패턴을 이용해서 처리하는 기술
				
				참고  ]
					MVC패턴
					==> 웹문서를 만드는 발전된 기술의 하나로
						중간에 WAS(Web Application Server)를 이용해서 분산처리하는 기술
						
						JSP 문서가 실행되는 순서
							1. 서버는 클라이언트의 요청을 분석해서 해당 문서를 실행하고
								(디스패치 시킨다. 라고 말한다)
							
							2. JSP는 뭔가를 실행해서 데이터를 생산(데이터 처리)
							
							3. 클라이언트에 응답문서를 작성한다.
							
							4. 이 문서를 응답한다.
							
	서블릿 클래스를 만드는 방법
	
		1. HttpServlet 클래스를 상속받은 클래스를 제작한다.
		
		2. 이 안에 3개의 함수를 오버라이드 한다.
			1) public void init() throws ServletException
				==> init 시점에서 실행되는 함수이다.
					따라서 이 함수는 우리가 배운 자바 생성자 함수에 해당한다고 생각하면 된다
			
			2) public void service(HttpServletRequest req, HrrpServleResponse resp)
											throws ServletException, IOException
											
				==> 실제 요청을 처리해주는 함수
					요청에 대한 실질적인 처리를 해주는 함수
					
			3) public void destory()
				==> desetory 시점에서 실행되는 함수
					따라서 이 부분에서는 그 클래스가 주로 사용하던 자원을
					제거하거나 반환해주는 목적으로 사용된다.
			
		3. 각각의 함수의 역할을 코딩한다.
		
		참고 ]
			서블릿의 생존주기
				
				init		- 서블릿 클래스가 가장 처음 만들어지는 시점
					|			(누군가 가장 처음 이 클래스를 요청한 경우 딱 한번만 실행된다)
					|
				service		- 누군가 이 클래스를 요청한 시점
					|			(요청 할 떄마다 계속해서 실행되는 함수이다,)
					|
				destory		- 적당한 시기(서버가 지정한 시간) 동안
								요청이 전혀 없는 경우의 시점
								(적당한 시점이 되면 이 클래스는 없어져야 한다.
								그때 실행되는 함수이다.
								따라서 주로 사용하던 자원을 닫는 목적으로 사용된다.)
		
		만들어진 서블릿 클래스를 실행하는 방법
		==> JSP 문서는 그 문서를 요청하면 실행이 되지만
			서블릿클래스는 문서가 아니므로 원칙적으로 요청을 할 수 없다.
		
		***
		따라서 서블릿 클래스가 실행되도록 요청 등록을 해줘야 한다.
			1. web, xml 파일에 요청 등록
				순서
				1) 서블릿을 등록한다.
					==> 만들어진 서블릿 클래스를 톰캣이라는 서버가 사용하도록 등록하는 방법
					
						<servlet>
							<servlet-name>서블릿이름</servlet-name>
							<servlet-class>만들어진 서블릿 클래스 경로</servlet-class>
							==> 패키지 이름까지 풀 겨로를 등록해야 한다.
						</servlet>
				
				2) 요청 내용과 서블릿을 맵핑시킨다,.
					==> 어떤 요청이 왔을 때 등록한 서블릿 클래스가 실행되어야 하는지를 등록하는 부분
					
						<servlet-mapping>
							<servlet-name>서블릿이름</servlet-name>
							==> 이곳에 쓰는 이름은 위에서 만들었던 서블릿이름
								반드시 등록된
								
		2. 